Mind Map generated by NB MindMap plugin   
> __version__=`1.1`,showJumps=`true`
---

# SpringBoot

## 执行流程

### 1、创建SpringApplication实例
- NOTE
<pre>public SpringApplication(ResourceLoader resourceLoader, Class&lt;?&gt;... primarySources) {
		this.resourceLoader = resourceLoader;
		Assert.notNull(primarySources, &quot;PrimarySources must not be null&quot;);
		this.primarySources = new LinkedHashSet&lt;&gt;(Arrays.asList(primarySources));
		this.webApplicationType = WebApplicationType.deduceFromClasspath();
		setInitializers((Collection) getSpringFactoriesInstances(
				ApplicationContextInitializer.class));
		setListeners((Collection) getSpringFactoriesInstances(ApplicationListener.class));
		this.mainApplicationClass = deduceMainApplicationClass();
	}
	
	
1、this.webApplicationType = WebApplicationType.deduceFromClasspath();
根据classpath里面是否存在某个特征类来决定创建什么样类型的应用，比如有
private static final String[] SERVLET_INDICATOR_CLASSES = { &quot;javax.servlet.Servlet&quot;,
			&quot;org.springframework.web.context.ConfigurableWebApplicationContext&quot; };
则创建WebApplicationType.SERVLET类型的应用

2、setInitializers((Collection) getSpringFactoriesInstances(ApplicationContextInitializer.class));
使用SpringFactoriesLoader在应用的classpath中查找并加载所有可用的ApplicationContextInitializer

3、setListeners((Collection) getSpringFactoriesInstances(ApplicationListener.class));
使用SpringFactoriesLoader在应用的classpath重查找并加载所有可用的ApplicationListener

</pre>

### 2、run方法

#### 加载SpringApplicationRunListener
- NOTE
<pre>SpringFactoriesLoader查找到的SpringApplicationRunListener

SpringApplicationRunListeners listeners = getRunListeners(args);
listeners.starting();
</pre>

### 3、配置Environment\(PropertySource、Profile\)
